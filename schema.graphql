type VaultPpsLastTimestampSlow @entity {
  id: ID!
  timestamp: BigInt!
}

type VaultPricePerShare @entity(immutable: true) {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  event: String!
  txHash: String!
  vault: String!
  pricePerShare: BigInt!
}

type VaultTVL @entity(immutable: true) {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  event: String!
  txHash: String!
  vault: String!
  tvl: BigInt!
}

type VaultTotalSupply @entity(immutable: true) {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  event: String!
  txHash: String!
  vault: String!
  totalSupply: BigInt!
}

type UserBalanceEvent @entity(immutable: true) {
  id: ID!
  timestamp: BigInt!
  block: BigInt!
  txHash: String!
  event: String!
  token: String!
  amount: BigInt!
  user: String!
  from: String!
  to: String!
}

type UserVaultBalanceTotal @entity {
  id: ID!
  usdc: BigInt!
  weth: BigInt!
  wbtc: BigInt!
  link: BigInt!
  uni: BigInt!
}

type UserVaultBalance @entity(immutable: true) {
  id: ID!
  timestamp: BigInt!
  block: BigInt!
  txHash: String!
  event: String!
  value: BigInt!
  user: String!
  vault: String!
}

type GlpRewardsClaim @entity(immutable: true) {
  id: ID!
  timestamp: BigInt! # uint256
  block: BigInt! # uint256
  claimed: BigInt! # uint256
}

type CompoundDistributeYield @entity(immutable: true) {
  id: ID!
  timestamp: BigInt! # uint256
  block: BigInt! # uint256
  glpYieldPerVault: [BigInt!]! # uint256[5]
}

type GmxState @entity(immutable: true) {
  id: ID!
  block: BigInt! # uint256
  timestamp: BigInt! # uint256
  event: String!
  assetsPrices: [BigInt!]! # uint256[5]
  reservedAmounts: [BigInt!]! # uint256[5]
  guaranteedUsd: [BigInt!]! # uint256[5]
  shortsAveragePrices: [BigInt!]! # uint256[5]
  globalShortSizes: [BigInt!]! # uint256[5]
}

type GmxClosedPositionPnl @entity {
  id: ID!
  block: BigInt!
  timestamp: BigInt!
  profit: BigInt!
  loss: BigInt!
  collateral: BigInt!
  reserveAmount: BigInt!
}
